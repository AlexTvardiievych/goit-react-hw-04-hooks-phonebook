{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/Utils/Button/Button.styled.jsx","components/Utils/Button/Button.jsx","components/Utils/Title/Title.styled.jsx","components/Utils/Title/Title.jsx","components/Utils/Input/Input.styled.jsx","components/Utils/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/Contacts.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Utils/Container/Container.styled.jsx","components/Utils/Container/Container.jsx","components/App.jsx","index.js"],"names":["Form","styled","form","Btn","button","Button","text","onClick","title","PageTitle","h2","props","size","color","marginR","marginL","marginT","Title","Field","input","Input","value","type","name","onChange","placeholder","ContactForm","state","number","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","onSubmit","this","pattern","required","Component","Name","p","Number","ContactItem","contact","List","ul","Item","li","ContactList","onDeleteContact","contacts","map","id","Container","Filter","Wrapper","div","children","App","useState","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","length","removeItem","data","newContact","nextId","find","toLowerCase","alert","prev","target","contactId","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c29ecb5.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border-style: solid;\n  border-width: 1px;\n  padding: 5px;\n  width: 30%;\n`;\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  border: solid;\n  border-width: 1px;\n  background-color: transparent;\n  cursor: pointer;\n  width: 100px;\n  height: 30px;\n  margin-top: 10px\n`;\n","import React from 'react';\nimport { Btn } from './Button.styled';\n\nfunction Button({ text, onClick, title }) {\n  return (\n    <Btn title={title} onClick={onClick}>\n      {text}\n    </Btn>\n  );\n}\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h2`\n  font-size: ${props => props.size}px;\n  color: ${props => props.color};\n  margin-right: ${props => props.marginR}px;\n  margin-left: ${props => props.marginL}px;\n  margin-top: ${props => props.marginT}px;\n`;\n","import React from 'react';\nimport { PageTitle } from './Title.styled';\n\nfunction Title({ marginT, marginR, marginL, text, size, color }) {\n  return (\n    <PageTitle\n      marginT={marginT}\n      marginR={marginR}\n      marginL={marginL}\n      color={color}\n      size={size}\n    >\n      {text}\n    </PageTitle>\n  );\n}\n\nexport default Title;\n","import styled from '@emotion/styled';\n\nexport const Field = styled.input`\n  width: 300px;\n  border: none;\n  border-bottom: 1px solid gray;\n  background-color: transparent;\n\n  &:hover {\n    border-bottom: 1px solid #000d59;\n  }\n`;\n","import React from 'react';\nimport { Field } from './Input.styled';\n\nfunction Input({ value, type, name, onChange, placeholder }) {\n  return (\n    <Field\n      placeholder={placeholder}\n      value={value}\n      type={type}\n      name={name}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from './ContactForm.styled';\nimport Button from '../Utils/Button/Button';\nimport Title from '../Utils/Title/Title';\nimport Input from '../Utils/Input/Input';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const value = e.currentTarget.value;\n    const name = e.currentTarget.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Title marginR={15} size={18} text=\"Name\" />\n        <Input\n          placeholder=\"type name...\"\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleChange}\n        />\n        <Title text=\"Number\" />\n        <Input\n          placeholder=\"type number...\"\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handleChange}\n        />\n        <Button\n          title=\"Add to contacts\"\n          text=\"Add contact\"\n          size={20}\n          type=\"submit\"\n        />\n      </Form>\n    );\n  }\n}\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Name = styled.p`\n  font-size: 18px;\n  margin-right: 20px;\n  vertical-align: middle;\n`;\nexport const Number = styled.p`\n  margin-right: 20px;\n  vertical-align: middle;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Name, Number } from './ContactItem.styled';\n\nfunction ContactItem({ contact }) {\n  return (\n    <>\n      <Name>{contact.name}</Name>\n      <Number>{contact.number}</Number>\n    </>\n  );\n}\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default ContactItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  border-style: solid;\n  border-width: 1px;\n  padding: 5px;\n  width: 30%;\n`;\nexport const Item = styled.li`\n  display: flex;\n  padding: 5px;\n`;\n","import React from 'react';\nimport ContactItem from '../ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\nimport Button from '../Utils/Button/Button';\n// import { MdDeleteForever } from 'react-icons/md';\nimport { List, Item } from './Contacts.styled';\n\nfunction ContactList({ onDeleteContact, contacts }) {\n  return (\n    <>\n      <List>\n        {contacts.map((contact) => (\n          <Item key={contact.id}>\n            <ContactItem contact={contact} />\n            <Button\n              title=\"Remove from contacts\"\n              text={\"Remove\"}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  padding: 5px;\r\n  width: 30%;\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from '../Utils/Title/Title';\nimport Input from '../Utils/Input/Input';\nimport { Container } from './Filter.styled';\n\nfunction Filter({ placeholder, value, onChange }) {\n  return (\n    <Container>\n      <Title size={18} text=\"Find Contacts by name\" />\n      <Input\n        placeholder=\"type to find contacts...\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </Container>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from 'react';\nimport { Wrapper } from './Container.styled';\n\nfunction Container({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n\nexport default Container;\n","import { React, useState, useEffect } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport nextId from 'react-id-generator';\r\nimport Container from './Utils/Container/Container';\r\nimport Title from './Utils/Title/Title';\r\n\r\nfunction App() {\r\n    const [contacts, setContacts] = useState([\r\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ]);\r\n\r\n    const [filter, setFilter] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const contacts = localStorage.getItem(\"contacts\");\r\n        const parsedContacts = JSON.parse(contacts);\r\n\r\n        if (parsedContacts) {\r\n            setContacts(parsedContacts);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n        if (contacts.length === 0) {\r\n            localStorage.removeItem(\"contacts\");\r\n        }\r\n    }, [contacts]);\r\n\r\n    const addContact = (data) => {\r\n        const { name, number } = data;\r\n        const id = nextId();\r\n        const newContact = {\r\n            name,\r\n            id,\r\n            number,\r\n        };\r\n\r\n        const checkOnSameContact = contacts.find(\r\n            contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\r\n        );\r\n\r\n        if (checkOnSameContact) {\r\n            alert(`${newContact.name} is already in contacts`);\r\n        }\r\n        else {\r\n            if (name === '' || number === '') {\r\n                alert('Please, fill empty fields');\r\n                return;\r\n            } else {\r\n                setContacts((prev) => [...prev, newContact]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteContact = contactId => {\r\n        setContacts((prev) => prev.filter((contact) => contactId !== contact.id));\r\n    };\r\n\r\n    const handleFilterChange = e => {\r\n        const target = e.target.value;\r\n        setFilter(target);\r\n    };\r\n\r\n    const filterByName = () => {\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Title color=\"#424242\" size={30} text=\"Phonebook\" />\r\n            <ContactForm onSubmit={addContact} contacts={contacts} />\r\n            <Filter\r\n                value={filter}\r\n                onChange={handleFilterChange} />\r\n\r\n            <Title marginT={10} size={20} text=\"Contacts\" />\r\n\r\n            <ContactList\r\n                onDeleteContact={deleteContact}\r\n                contacts={filterByName()}\r\n            />\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}